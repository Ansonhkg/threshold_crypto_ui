{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0","program":"/Users/chris/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","group","--edition=2018","/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=6564c0a4e5c8fa39","-C","extra-filename=-6564c0a4e5c8fa39","--out-dir","/Users/chris/Documents/WorkStuff/LIT/threshold_crypto_ui/target/rls/debug/deps","-L","dependency=/Users/chris/Documents/WorkStuff/LIT/threshold_crypto_ui/target/rls/debug/deps","--extern","ff=/Users/chris/Documents/WorkStuff/LIT/threshold_crypto_ui/target/rls/debug/deps/libff-5de70c827ef64061.rmeta","--extern","rand=/Users/chris/Documents/WorkStuff/LIT/threshold_crypto_ui/target/rls/debug/deps/librand-71766808f006ed42.rmeta","--extern","rand_xorshift=/Users/chris/Documents/WorkStuff/LIT/threshold_crypto_ui/target/rls/debug/deps/librand_xorshift-5aa4f1031774946a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/chris/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/chris/Documents/WorkStuff/LIT/threshold_crypto_ui/target/rls/debug/deps/libgroup-6564c0a4e5c8fa39.rmeta"},"prelude":{"crate_id":{"name":"group","disambiguator":[17031486860465776865,9485357544428083655]},"crate_root":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src","external_crates":[{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9172818328040565646,6008277437804469875]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18023762249451438278,17364488992197012074]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6174868875728822846,14659296950619859741]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[9909391715850836332,16752257504245560381]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14542680768755952660,4649064268255045139]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7421611716893642886,3859113563415598904]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8532663578280708093,13556502921131137443]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14562797630124360947,9203807209675126564]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[961574724041044870,9501689340679369614]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4557733629255126673,2353492741300857752]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[12879287241776040525,2083297142784214685]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[12494445134296355061,15635921899166523431]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[1653496072036316988,2694381082769459735]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[6595634133147820921,3981130256448654951]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8737953409172805528,13213827895087005648]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[18270561618912576826,6841529963709465923]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","num":17,"id":{"name":"ff","disambiguator":[892934688243777924,1257045736242305536]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","num":18,"id":{"name":"ff_derive","disambiguator":[8605594154934612115,5696696342462957859]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","num":19,"id":{"name":"rand_core","disambiguator":[5627891762911697588,2806380577102128211]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","num":20,"id":{"name":"getrandom","disambiguator":[15444170389786144621,2130092027384918068]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","num":21,"id":{"name":"cfg_if","disambiguator":[8831126000530456462,14660711433489744206]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","num":22,"id":{"name":"libc","disambiguator":[5017221569625743914,11455185487838375487]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","num":23,"id":{"name":"byteorder","disambiguator":[14106758169175854007,10852441240094542438]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","num":24,"id":{"name":"rand","disambiguator":[2976111804877416220,12879797460768420774]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","num":25,"id":{"name":"rand_chacha","disambiguator":[17987752557009262214,126922722138687767]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","num":26,"id":{"name":"ppv_lite86","disambiguator":[4250490900380042003,17080827691340421607]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/tests/mod.rs","num":27,"id":{"name":"rand_xorshift","disambiguator":[11142006335542349504,16034558781324109906]}}],"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":54,"byte_end":6927,"line_start":2,"line_end":190,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":169},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":274,"byte_end":278,"line_start":12,"line_end":12,"column_start":21,"column_end":25},"alias_span":null,"name":"Wnaf","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":54,"byte_end":6927,"line_start":2,"line_end":190,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":77},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":142},{"krate":0,"index":158},{"krate":0,"index":181},{"krate":0,"index":194},{"krate":0,"index":165},{"krate":0,"index":167}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":54,"byte_end":97,"line_start":2,"line_end":2,"column_start":1,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":25},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/tests/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tests","qualname":"::tests","value":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/tests/mod.rs","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":75}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":49},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/tests/mod.rs","byte_start":7079,"byte_end":7090,"line_start":7,"line_end":7,"column_start":8,"column_end":19},"name":"curve_tests","qualname":"::tests::curve_tests","value":"pub fn curve_tests<G: CurveProjective>()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":169},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":20849,"byte_end":20853,"line_start":77,"line_end":77,"column_start":12,"column_end":16},"name":"Wnaf","qualname":"::wnaf::Wnaf","value":"Wnaf {  }","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175}],"decl_id":null,"docs":" A \"w-ary non-adjacent form\" exponentiation context.\n","sig":null,"attributes":[{"value":"/ A \"w-ary non-adjacent form\" exponentiation context.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":20765,"byte_end":20820,"line_start":75,"line_end":75,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":21038,"byte_end":21041,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<Wnaf<(), Vec<G>, Vec<i64>>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new wNAF context without allocating.\n","sig":null,"attributes":[{"value":"/ Construct a new wNAF context without allocating.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":20974,"byte_end":21026,"line_start":84,"line_end":84,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":21337,"byte_end":21341,"line_start":95,"line_end":95,"column_start":12,"column_end":16},"name":"base","qualname":"<Wnaf<(), Vec<G>, Vec<i64>>>::base","value":"pub fn base(&mut Self, G, usize) -> Wnaf<usize, &[G], &mut Vec<i64>>","parent":null,"children":[],"decl_id":null,"docs":" Given a base and a number of scalars, compute a window table and return a `Wnaf` object that\n can perform exponentiations with `.scalar(..)`.\n","sig":null,"attributes":[{"value":"/ Given a base and a number of scalars, compute a window table and return a `Wnaf` object that","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":21173,"byte_end":21269,"line_start":93,"line_end":93,"column_start":5,"column_end":101}},{"value":"/ can perform exponentiations with `.scalar(..)`.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":21274,"byte_end":21325,"line_start":94,"line_end":94,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":22136,"byte_end":22142,"line_start":113,"line_end":113,"column_start":12,"column_end":18},"name":"scalar","qualname":"<Wnaf<(), Vec<G>, Vec<i64>>>::scalar","value":"pub fn scalar(&mut Self, <<G as CurveProjective>::Scalar as PrimeField>::Repr)\n-> Wnaf<usize, &mut Vec<G>, &[i64]>","parent":null,"children":[],"decl_id":null,"docs":" Given a scalar, compute its wNAF representation and return a `Wnaf` object that can perform\n exponentiations with `.base(..)`.\n","sig":null,"attributes":[{"value":"/ Given a scalar, compute its wNAF representation and return a `Wnaf` object that can perform","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":21987,"byte_end":22082,"line_start":111,"line_end":111,"column_start":5,"column_end":100}},{"value":"/ exponentiations with `.base(..)`.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":22087,"byte_end":22124,"line_start":112,"line_end":112,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":23034,"byte_end":23040,"line_start":136,"line_end":136,"column_start":12,"column_end":18},"name":"shared","qualname":"<Wnaf<usize, &'a [G], &'a mut Vec<i64>>>::shared","value":"pub fn shared(&Self) -> Wnaf<usize, &'a [G], Vec<i64>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs new space for the scalar representation while borrowing\n the computed window table, for sending the window table across threads.\n","sig":null,"attributes":[{"value":"/ Constructs new space for the scalar representation while borrowing","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":22872,"byte_end":22942,"line_start":134,"line_end":134,"column_start":5,"column_end":75}},{"value":"/ the computed window table, for sending the window table across threads.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":22947,"byte_end":23022,"line_start":135,"line_end":135,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":23471,"byte_end":23477,"line_start":149,"line_end":149,"column_start":12,"column_end":18},"name":"shared","qualname":"<Wnaf<usize, &'a mut Vec<G>, &'a [i64]>>::shared","value":"pub fn shared(&Self) -> Wnaf<usize, Vec<G>, &'a [i64]>","parent":null,"children":[],"decl_id":null,"docs":" Constructs new space for the window table while borrowing\n the computed scalar representation, for sending the scalar representation\n across threads.\n","sig":null,"attributes":[{"value":"/ Constructs new space for the window table while borrowing","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":23292,"byte_end":23353,"line_start":146,"line_end":146,"column_start":5,"column_end":66}},{"value":"/ the computed scalar representation, for sending the scalar representation","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":23358,"byte_end":23435,"line_start":147,"line_end":147,"column_start":5,"column_end":82}},{"value":"/ across threads.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":23440,"byte_end":23459,"line_start":148,"line_end":148,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":23759,"byte_end":23763,"line_start":160,"line_end":160,"column_start":12,"column_end":16},"name":"base","qualname":"<Wnaf<usize, B, S>>::base","value":"pub fn base<G: CurveProjective>(&mut Self, G) -> G where B: AsMut<Vec<G>>","parent":null,"children":[],"decl_id":null,"docs":" Performs exponentiation given a base.\n","sig":null,"attributes":[{"value":"/ Performs exponentiation given a base.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":23706,"byte_end":23747,"line_start":159,"line_end":159,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":24090,"byte_end":24096,"line_start":171,"line_end":171,"column_start":12,"column_end":18},"name":"scalar","qualname":"<Wnaf<usize, B, S>>::scalar","value":"pub fn scalar<G: CurveProjective>(&mut Self,\n                                  <<G as CurveProjective>::Scalar as\n                                  PrimeField>::Repr) -> G where B: AsRef<[G]>","parent":null,"children":[],"decl_id":null,"docs":" Performs exponentiation given a scalar.\n","sig":null,"attributes":[{"value":"/ Performs exponentiation given a scalar.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":24035,"byte_end":24078,"line_start":170,"line_end":170,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":120},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":406,"byte_end":421,"line_start":16,"line_end":16,"column_start":11,"column_end":26},"name":"CurveProjective","qualname":"::CurveProjective","value":"CurveProjective: PartialEq + Eq + Sized + Copy + Clone + Send + Sync + fmt::Debug +\nfmt::Display + 'static","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141}],"decl_id":null,"docs":" Projective representation of an elliptic curve point guaranteed to be\n in the correct prime order subgroup.\n","sig":null,"attributes":[{"value":"/ Projective representation of an elliptic curve point guaranteed to be","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":281,"byte_end":354,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ in the correct prime order subgroup.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":355,"byte_end":395,"line_start":15,"line_end":15,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":121},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":528,"byte_end":534,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"name":"Engine","qualname":"::CurveProjective::Engine","value":"type Engine: ScalarEngine<Fr = Self::Scalar>;","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":122},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":578,"byte_end":584,"line_start":20,"line_end":20,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::CurveProjective::Scalar","value":"type Scalar: PrimeField + SqrtField;","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":123},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":619,"byte_end":623,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"name":"Base","qualname":"::CurveProjective::Base","value":"type Base: SqrtField;","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":124},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":645,"byte_end":651,"line_start":22,"line_end":22,"column_start":10,"column_end":16},"name":"Affine","qualname":"::CurveProjective::Affine","value":"type Affine: CurveAffine<Projective = Self, Scalar = Self::Scalar>;","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":797,"byte_end":803,"line_start":25,"line_end":25,"column_start":8,"column_end":14},"name":"random","qualname":"::CurveProjective::random","value":"pub fn random<R: RngCore + ?std::marker::Sized>(&mut R) -> Self","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Returns an element chosen uniformly at random using a user-provided RNG.\n","sig":null,"attributes":[{"value":"/ Returns an element chosen uniformly at random using a user-provided RNG.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":713,"byte_end":789,"line_start":24,"line_end":24,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":907,"byte_end":911,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"zero","qualname":"::CurveProjective::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Returns the additive identity.\n","sig":null,"attributes":[{"value":"/ Returns the additive identity.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":865,"byte_end":899,"line_start":27,"line_end":27,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":986,"byte_end":989,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"one","qualname":"::CurveProjective::one","value":"pub fn one() -> Self","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Returns a fixed generator of unknown exponent.\n","sig":null,"attributes":[{"value":"/ Returns a fixed generator of unknown exponent.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":928,"byte_end":978,"line_start":30,"line_end":30,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":1068,"byte_end":1075,"line_start":34,"line_end":34,"column_start":8,"column_end":15},"name":"is_zero","qualname":"::CurveProjective::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Determines if this point is the point at infinity.\n","sig":null,"attributes":[{"value":"/ Determines if this point is the point at infinity.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":1006,"byte_end":1060,"line_start":33,"line_end":33,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":1197,"byte_end":1216,"line_start":38,"line_end":38,"column_start":8,"column_end":27},"name":"batch_normalization","qualname":"::CurveProjective::batch_normalization","value":"pub fn batch_normalization(&mut [Self])","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Normalizes a slice of projective elements so that\n conversion to affine is cheap.\n","sig":null,"attributes":[{"value":"/ Normalizes a slice of projective elements so that","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":1097,"byte_end":1150,"line_start":36,"line_end":36,"column_start":5,"column_end":58}},{"value":"/ conversion to affine is cheap.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":1155,"byte_end":1189,"line_start":37,"line_end":37,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":1347,"byte_end":1360,"line_start":42,"line_end":42,"column_start":8,"column_end":21},"name":"is_normalized","qualname":"::CurveProjective::is_normalized","value":"pub fn is_normalized(&Self) -> bool","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Checks if the point is already \"normalized\" so that\n cheap affine conversion is possible.\n","sig":null,"attributes":[{"value":"/ Checks if the point is already \"normalized\" so that","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":1239,"byte_end":1294,"line_start":40,"line_end":40,"column_start":5,"column_end":60}},{"value":"/ cheap affine conversion is possible.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":1299,"byte_end":1339,"line_start":41,"line_end":41,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":1415,"byte_end":1421,"line_start":45,"line_end":45,"column_start":8,"column_end":14},"name":"double","qualname":"::CurveProjective::double","value":"pub fn double(&mut Self)","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Doubles this element.\n","sig":null,"attributes":[{"value":"/ Doubles this element.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":1382,"byte_end":1407,"line_start":44,"line_end":44,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":1488,"byte_end":1498,"line_start":48,"line_end":48,"column_start":8,"column_end":18},"name":"add_assign","qualname":"::CurveProjective::add_assign","value":"pub fn add_assign(&mut Self, &Self)","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Adds another element to this element.\n","sig":null,"attributes":[{"value":"/ Adds another element to this element.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":1439,"byte_end":1480,"line_start":47,"line_end":47,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":1586,"byte_end":1596,"line_start":51,"line_end":51,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"::CurveProjective::sub_assign","value":"pub fn sub_assign(&mut Self, &Self)","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Subtracts another element from this element.\n","sig":null,"attributes":[{"value":"/ Subtracts another element from this element.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":1530,"byte_end":1578,"line_start":50,"line_end":50,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":1769,"byte_end":1785,"line_start":58,"line_end":58,"column_start":8,"column_end":24},"name":"add_assign_mixed","qualname":"::CurveProjective::add_assign_mixed","value":"pub fn add_assign_mixed(&mut Self, &Self::Affine)","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Adds an affine element to this element.\n","sig":null,"attributes":[{"value":"/ Adds an affine element to this element.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":1718,"byte_end":1761,"line_start":57,"line_end":57,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":1858,"byte_end":1864,"line_start":61,"line_end":61,"column_start":8,"column_end":14},"name":"negate","qualname":"::CurveProjective::negate","value":"pub fn negate(&mut Self)","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Negates this element.\n","sig":null,"attributes":[{"value":"/ Negates this element.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":1825,"byte_end":1850,"line_start":60,"line_end":60,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":1941,"byte_end":1951,"line_start":64,"line_end":64,"column_start":8,"column_end":18},"name":"mul_assign","qualname":"::CurveProjective::mul_assign","value":"pub fn mul_assign<S: Into<<Self::Scalar as PrimeField>::Repr>>(&mut Self, S)","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Performs scalar multiplication of this element.\n","sig":null,"attributes":[{"value":"/ Performs scalar multiplication of this element.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":1882,"byte_end":1933,"line_start":63,"line_end":63,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":2089,"byte_end":2100,"line_start":67,"line_end":67,"column_start":8,"column_end":19},"name":"into_affine","qualname":"::CurveProjective::into_affine","value":"pub fn into_affine(&Self) -> Self::Affine","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts this element into its affine representation.\n","sig":null,"attributes":[{"value":"/ Converts this element into its affine representation.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":2024,"byte_end":2081,"line_start":66,"line_end":66,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":2254,"byte_end":2281,"line_start":71,"line_end":71,"column_start":8,"column_end":35},"name":"recommended_wnaf_for_scalar","qualname":"::CurveProjective::recommended_wnaf_for_scalar","value":"pub fn recommended_wnaf_for_scalar(<Self::Scalar as PrimeField>::Repr)\n-> usize","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Recommends a wNAF window table size given a scalar. Always returns a number\n between 2 and 22, inclusive.\n","sig":null,"attributes":[{"value":"/ Recommends a wNAF window table size given a scalar. Always returns a number","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":2130,"byte_end":2209,"line_start":69,"line_end":69,"column_start":5,"column_end":84}},{"value":"/ between 2 and 22, inclusive.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":2214,"byte_end":2246,"line_start":70,"line_end":70,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":2505,"byte_end":2537,"line_start":75,"line_end":75,"column_start":8,"column_end":40},"name":"recommended_wnaf_for_num_scalars","qualname":"::CurveProjective::recommended_wnaf_for_num_scalars","value":"pub fn recommended_wnaf_for_num_scalars(usize) -> usize","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Recommends a wNAF window size given the number of scalars you intend to multiply\n a base by. Always returns a number between 2 and 22, inclusive.\n","sig":null,"attributes":[{"value":"/ Recommends a wNAF window size given the number of scalars you intend to multiply","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":2341,"byte_end":2425,"line_start":73,"line_end":73,"column_start":5,"column_end":89}},{"value":"/ a base by. Always returns a number between 2 and 22, inclusive.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":2430,"byte_end":2497,"line_start":74,"line_end":74,"column_start":5,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":142},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":2692,"byte_end":2703,"line_start":80,"line_end":80,"column_start":11,"column_end":22},"name":"CurveAffine","qualname":"::CurveAffine","value":"CurveAffine: Copy + Clone + Sized + Send + Sync + fmt::Debug + fmt::Display + PartialEq +\nEq + 'static","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157}],"decl_id":null,"docs":" Affine representation of an elliptic curve point guaranteed to be\n in the correct prime order subgroup.\n","sig":null,"attributes":[{"value":"/ Affine representation of an elliptic curve point guaranteed to be","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":2571,"byte_end":2640,"line_start":78,"line_end":78,"column_start":1,"column_end":70}},{"value":"/ in the correct prime order subgroup.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":2641,"byte_end":2681,"line_start":79,"line_end":79,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":143},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":2810,"byte_end":2816,"line_start":83,"line_end":83,"column_start":10,"column_end":16},"name":"Engine","qualname":"::CurveAffine::Engine","value":"type Engine: ScalarEngine<Fr = Self::Scalar>;","parent":{"krate":0,"index":142},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":144},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":2860,"byte_end":2866,"line_start":84,"line_end":84,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::CurveAffine::Scalar","value":"type Scalar: PrimeField + SqrtField;","parent":{"krate":0,"index":142},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":145},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":2901,"byte_end":2905,"line_start":85,"line_end":85,"column_start":10,"column_end":14},"name":"Base","qualname":"::CurveAffine::Base","value":"type Base: SqrtField;","parent":{"krate":0,"index":142},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":146},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":2927,"byte_end":2937,"line_start":86,"line_end":86,"column_start":10,"column_end":20},"name":"Projective","qualname":"::CurveAffine::Projective","value":"type Projective: CurveProjective<Affine = Self, Scalar = Self::Scalar>;","parent":{"krate":0,"index":142},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":147},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":3003,"byte_end":3015,"line_start":87,"line_end":87,"column_start":10,"column_end":22},"name":"Uncompressed","qualname":"::CurveAffine::Uncompressed","value":"type Uncompressed: EncodedPoint<Affine = Self>;","parent":{"krate":0,"index":142},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":148},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":3055,"byte_end":3065,"line_start":88,"line_end":88,"column_start":10,"column_end":20},"name":"Compressed","qualname":"::CurveAffine::Compressed","value":"type Compressed: EncodedPoint<Affine = Self>;","parent":{"krate":0,"index":142},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":3143,"byte_end":3147,"line_start":91,"line_end":91,"column_start":8,"column_end":12},"name":"zero","qualname":"::CurveAffine::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":142},"children":[],"decl_id":null,"docs":" Returns the additive identity.\n","sig":null,"attributes":[{"value":"/ Returns the additive identity.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":3101,"byte_end":3135,"line_start":90,"line_end":90,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":3222,"byte_end":3225,"line_start":94,"line_end":94,"column_start":8,"column_end":11},"name":"one","qualname":"::CurveAffine::one","value":"pub fn one() -> Self","parent":{"krate":0,"index":142},"children":[],"decl_id":null,"docs":" Returns a fixed generator of unknown exponent.\n","sig":null,"attributes":[{"value":"/ Returns a fixed generator of unknown exponent.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":3164,"byte_end":3214,"line_start":93,"line_end":93,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":3343,"byte_end":3350,"line_start":98,"line_end":98,"column_start":8,"column_end":15},"name":"is_zero","qualname":"::CurveAffine::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":{"krate":0,"index":142},"children":[],"decl_id":null,"docs":" Determines if this point represents the point at infinity; the\n additive identity.\n","sig":null,"attributes":[{"value":"/ Determines if this point represents the point at infinity; the","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":3242,"byte_end":3308,"line_start":96,"line_end":96,"column_start":5,"column_end":71}},{"value":"/ additive identity.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":3313,"byte_end":3335,"line_start":97,"line_end":97,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":3405,"byte_end":3411,"line_start":101,"line_end":101,"column_start":8,"column_end":14},"name":"negate","qualname":"::CurveAffine::negate","value":"pub fn negate(&mut Self)","parent":{"krate":0,"index":142},"children":[],"decl_id":null,"docs":" Negates this element.\n","sig":null,"attributes":[{"value":"/ Negates this element.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":3372,"byte_end":3397,"line_start":100,"line_end":100,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":3508,"byte_end":3511,"line_start":104,"line_end":104,"column_start":8,"column_end":11},"name":"mul","qualname":"::CurveAffine::mul","value":"pub fn mul<S: Into<<Self::Scalar as PrimeField>::Repr>>(&Self, S)\n-> Self::Projective","parent":{"krate":0,"index":142},"children":[],"decl_id":null,"docs":" Performs scalar multiplication of this element with mixed addition.\n","sig":null,"attributes":[{"value":"/ Performs scalar multiplication of this element with mixed addition.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":3429,"byte_end":3500,"line_start":103,"line_end":103,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":3665,"byte_end":3680,"line_start":107,"line_end":107,"column_start":8,"column_end":23},"name":"into_projective","qualname":"::CurveAffine::into_projective","value":"pub fn into_projective(&Self) -> Self::Projective","parent":{"krate":0,"index":142},"children":[],"decl_id":null,"docs":" Converts this element into its affine representation.\n","sig":null,"attributes":[{"value":"/ Converts this element into its affine representation.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":3600,"byte_end":3657,"line_start":106,"line_end":106,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":3828,"byte_end":3843,"line_start":111,"line_end":111,"column_start":8,"column_end":23},"name":"into_compressed","qualname":"::CurveAffine::into_compressed","value":"pub fn into_compressed(&Self) -> Self::Compressed","parent":{"krate":0,"index":142},"children":[],"decl_id":null,"docs":" Converts this element into its compressed encoding, so long as it's not\n the point at infinity.\n","sig":null,"attributes":[{"value":"/ Converts this element into its compressed encoding, so long as it's not","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":3714,"byte_end":3789,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/ the point at infinity.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":3794,"byte_end":3820,"line_start":110,"line_end":110,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":4063,"byte_end":4080,"line_start":117,"line_end":117,"column_start":8,"column_end":25},"name":"into_uncompressed","qualname":"::CurveAffine::into_uncompressed","value":"pub fn into_uncompressed(&Self) -> Self::Uncompressed","parent":{"krate":0,"index":142},"children":[],"decl_id":null,"docs":" Converts this element into its uncompressed encoding, so long as it's not\n the point at infinity.\n","sig":null,"attributes":[{"value":"/ Converts this element into its uncompressed encoding, so long as it's not","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":3947,"byte_end":4024,"line_start":115,"line_end":115,"column_start":5,"column_end":82}},{"value":"/ the point at infinity.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":4029,"byte_end":4055,"line_start":116,"line_end":116,"column_start":5,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":158},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":4276,"byte_end":4288,"line_start":123,"line_end":123,"column_start":11,"column_end":23},"name":"EncodedPoint","qualname":"::EncodedPoint","value":"EncodedPoint: Sized + Send + Sync + AsRef<[u8]> + AsMut<[u8]> + Clone + Copy + 'static","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164}],"decl_id":null,"docs":" An encoded elliptic curve point, which should essentially wrap a `[u8; N]`.\n","sig":null,"attributes":[{"value":"/ An encoded elliptic curve point, which should essentially wrap a `[u8; N]`.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":4186,"byte_end":4265,"line_start":122,"line_end":122,"column_start":1,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":159},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":4378,"byte_end":4384,"line_start":126,"line_end":126,"column_start":10,"column_end":16},"name":"Affine","qualname":"::EncodedPoint::Affine","value":"type Affine: CurveAffine;","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":4448,"byte_end":4453,"line_start":129,"line_end":129,"column_start":8,"column_end":13},"name":"empty","qualname":"::EncodedPoint::empty","value":"pub fn empty() -> Self","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Creates an empty representation.\n","sig":null,"attributes":[{"value":"/ Creates an empty representation.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":4404,"byte_end":4440,"line_start":128,"line_end":128,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":4542,"byte_end":4546,"line_start":132,"line_end":132,"column_start":8,"column_end":12},"name":"size","qualname":"::EncodedPoint::size","value":"pub fn size() -> usize","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Returns the number of bytes consumed by this representation.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes consumed by this representation.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":4470,"byte_end":4534,"line_start":131,"line_end":131,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":4684,"byte_end":4695,"line_start":136,"line_end":136,"column_start":8,"column_end":19},"name":"into_affine","qualname":"::EncodedPoint::into_affine","value":"pub fn into_affine(&Self) -> Result<Self::Affine, GroupDecodingError>","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Converts an `EncodedPoint` into a `CurveAffine` element,\n if the encoding represents a valid element.\n","sig":null,"attributes":[{"value":"/ Converts an `EncodedPoint` into a `CurveAffine` element,","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":4564,"byte_end":4624,"line_start":134,"line_end":134,"column_start":5,"column_end":65}},{"value":"/ if the encoding represents a valid element.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":4629,"byte_end":4676,"line_start":135,"line_end":135,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":5098,"byte_end":5119,"line_start":145,"line_end":145,"column_start":8,"column_end":29},"name":"into_affine_unchecked","qualname":"::EncodedPoint::into_affine_unchecked","value":"pub fn into_affine_unchecked(&Self)\n-> Result<Self::Affine, GroupDecodingError>","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Converts an `EncodedPoint` into a `CurveAffine` element,\n without guaranteeing that the encoding represents a valid\n element. This is useful when the caller knows the encoding is\n valid already.","sig":null,"attributes":[{"value":"/ Converts an `EncodedPoint` into a `CurveAffine` element,","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":4753,"byte_end":4813,"line_start":138,"line_end":138,"column_start":5,"column_end":65}},{"value":"/ without guaranteeing that the encoding represents a valid","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":4818,"byte_end":4879,"line_start":139,"line_end":139,"column_start":5,"column_end":66}},{"value":"/ element. This is useful when the caller knows the encoding is","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":4884,"byte_end":4949,"line_start":140,"line_end":140,"column_start":5,"column_end":70}},{"value":"/ valid already.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":4954,"byte_end":4972,"line_start":141,"line_end":141,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":4977,"byte_end":4980,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ If the encoding is invalid, this can break API invariants,","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":4985,"byte_end":5047,"line_start":143,"line_end":143,"column_start":5,"column_end":67}},{"value":"/ so caution is strongly encouraged.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":5052,"byte_end":5090,"line_start":144,"line_end":144,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":5295,"byte_end":5306,"line_start":149,"line_end":149,"column_start":8,"column_end":19},"name":"from_affine","qualname":"::EncodedPoint::from_affine","value":"pub fn from_affine(Self::Affine) -> Self","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Creates an `EncodedPoint` from an affine point, as long as the\n point is not the point at infinity.\n","sig":null,"attributes":[{"value":"/ Creates an `EncodedPoint` from an affine point, as long as the","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":5177,"byte_end":5243,"line_start":147,"line_end":147,"column_start":5,"column_end":71}},{"value":"/ point is not the point at infinity.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":5248,"byte_end":5287,"line_start":148,"line_end":148,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":182},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":5512,"byte_end":5522,"line_start":156,"line_end":156,"column_start":5,"column_end":15},"name":"NotOnCurve","qualname":"::GroupDecodingError::NotOnCurve","value":"GroupDecodingError::NotOnCurve","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" The coordinate(s) do not lie on the curve.\n","sig":null,"attributes":[{"value":"/ The coordinate(s) do not lie on the curve.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":5461,"byte_end":5507,"line_start":155,"line_end":155,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":184},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":5585,"byte_end":5598,"line_start":158,"line_end":158,"column_start":5,"column_end":18},"name":"NotInSubgroup","qualname":"::GroupDecodingError::NotInSubgroup","value":"GroupDecodingError::NotInSubgroup","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" The element is not part of the r-order subgroup.\n","sig":null,"attributes":[{"value":"/ The element is not part of the r-order subgroup.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":5528,"byte_end":5580,"line_start":157,"line_end":157,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":186},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":5656,"byte_end":5679,"line_start":160,"line_end":160,"column_start":5,"column_end":28},"name":"CoordinateDecodingError","qualname":"::GroupDecodingError::CoordinateDecodingError","value":"GroupDecodingError::CoordinateDecodingError(&'static str, PrimeFieldDecodingError)","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" One of the coordinates could not be decoded\n","sig":null,"attributes":[{"value":"/ One of the coordinates could not be decoded","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":5604,"byte_end":5651,"line_start":159,"line_end":159,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":190},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":5796,"byte_end":5821,"line_start":162,"line_end":162,"column_start":5,"column_end":30},"name":"UnexpectedCompressionMode","qualname":"::GroupDecodingError::UnexpectedCompressionMode","value":"GroupDecodingError::UnexpectedCompressionMode","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" The compression mode of the encoded element was not as expected\n","sig":null,"attributes":[{"value":"/ The compression mode of the encoded element was not as expected","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":5724,"byte_end":5791,"line_start":161,"line_end":161,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":192},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":5893,"byte_end":5914,"line_start":164,"line_end":164,"column_start":5,"column_end":26},"name":"UnexpectedInformation","qualname":"::GroupDecodingError::UnexpectedInformation","value":"GroupDecodingError::UnexpectedInformation","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" The encoding contained bits that should not have been set\n","sig":null,"attributes":[{"value":"/ The encoding contained bits that should not have been set","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":5827,"byte_end":5888,"line_start":163,"line_end":163,"column_start":5,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":181},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":5436,"byte_end":5454,"line_start":154,"line_end":154,"column_start":10,"column_end":28},"name":"GroupDecodingError","qualname":"::GroupDecodingError","value":"pub enum GroupDecodingError {\n    NotOnCurve,\n    NotInSubgroup,\n    CoordinateDecodingError(&'static str, PrimeFieldDecodingError),\n    UnexpectedCompressionMode,\n    UnexpectedInformation,\n}","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":190},{"krate":0,"index":192}],"decl_id":null,"docs":" An error that may occur when trying to decode an `EncodedPoint`.\n","sig":null,"attributes":[{"value":"/ An error that may occur when trying to decode an `EncodedPoint`.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":5341,"byte_end":5409,"line_start":152,"line_end":152,"column_start":1,"column_end":69}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":20941,"byte_end":20945,"line_start":83,"line_end":83,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":22827,"byte_end":22831,"line_start":133,"line_end":133,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":23247,"byte_end":23251,"line_start":145,"line_end":145,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":23682,"byte_end":23686,"line_start":158,"line_end":158,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":24011,"byte_end":24015,"line_start":169,"line_end":169,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":5934,"byte_end":5952,"line_start":167,"line_end":167,"column_start":16,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":6573,"byte_end":6591,"line_start":181,"line_end":181,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":236,"byte_end":241,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":25}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":20941,"byte_end":20945,"line_start":83,"line_end":83,"column_start":26,"column_end":30},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":22827,"byte_end":22831,"line_start":133,"line_end":133,"column_start":30,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":23247,"byte_end":23251,"line_start":145,"line_end":145,"column_start":30,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":23682,"byte_end":23686,"line_start":158,"line_end":158,"column_start":26,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/wnaf.rs","byte_start":24011,"byte_end":24015,"line_start":169,"line_end":169,"column_start":29,"column_end":33},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":427,"byte_end":436,"line_start":17,"line_end":17,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":2,"index":2500},"to":{"krate":0,"index":120}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":439,"byte_end":441,"line_start":17,"line_end":17,"column_start":17,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2505},"to":{"krate":0,"index":120}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":444,"byte_end":449,"line_start":17,"line_end":17,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2854},"to":{"krate":0,"index":120}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":452,"byte_end":456,"line_start":17,"line_end":17,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2859},"to":{"krate":0,"index":120}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":459,"byte_end":464,"line_start":17,"line_end":17,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":2470},"to":{"krate":0,"index":120}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":467,"byte_end":471,"line_start":17,"line_end":17,"column_start":45,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":2849},"to":{"krate":0,"index":120}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":474,"byte_end":478,"line_start":17,"line_end":17,"column_start":52,"column_end":56},"kind":"SuperTrait","from":{"krate":2,"index":2861},"to":{"krate":0,"index":120}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":486,"byte_end":491,"line_start":17,"line_end":17,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":8889},"to":{"krate":0,"index":120}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":499,"byte_end":506,"line_start":17,"line_end":17,"column_start":77,"column_end":84},"kind":"SuperTrait","from":{"krate":2,"index":8896},"to":{"krate":0,"index":120}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":2709,"byte_end":2713,"line_start":81,"line_end":81,"column_start":5,"column_end":9},"kind":"SuperTrait","from":{"krate":2,"index":2859},"to":{"krate":0,"index":142}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":2716,"byte_end":2721,"line_start":81,"line_end":81,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":2,"index":2470},"to":{"krate":0,"index":142}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":2724,"byte_end":2729,"line_start":81,"line_end":81,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2854},"to":{"krate":0,"index":142}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":2732,"byte_end":2736,"line_start":81,"line_end":81,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2849},"to":{"krate":0,"index":142}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":2739,"byte_end":2743,"line_start":81,"line_end":81,"column_start":35,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2861},"to":{"krate":0,"index":142}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":2751,"byte_end":2756,"line_start":81,"line_end":81,"column_start":47,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":8889},"to":{"krate":0,"index":142}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":2764,"byte_end":2771,"line_start":81,"line_end":81,"column_start":60,"column_end":67},"kind":"SuperTrait","from":{"krate":2,"index":8896},"to":{"krate":0,"index":142}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":2774,"byte_end":2783,"line_start":81,"line_end":81,"column_start":70,"column_end":79},"kind":"SuperTrait","from":{"krate":2,"index":2500},"to":{"krate":0,"index":142}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":2786,"byte_end":2788,"line_start":81,"line_end":81,"column_start":82,"column_end":84},"kind":"SuperTrait","from":{"krate":2,"index":2505},"to":{"krate":0,"index":142}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":4294,"byte_end":4299,"line_start":124,"line_end":124,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2854},"to":{"krate":0,"index":158}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":4302,"byte_end":4306,"line_start":124,"line_end":124,"column_start":13,"column_end":17},"kind":"SuperTrait","from":{"krate":2,"index":2849},"to":{"krate":0,"index":158}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":4309,"byte_end":4313,"line_start":124,"line_end":124,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2861},"to":{"krate":0,"index":158}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":4316,"byte_end":4321,"line_start":124,"line_end":124,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2746},"to":{"krate":0,"index":158}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":4330,"byte_end":4335,"line_start":124,"line_end":124,"column_start":41,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":2749},"to":{"krate":0,"index":158}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":4344,"byte_end":4349,"line_start":124,"line_end":124,"column_start":55,"column_end":60},"kind":"SuperTrait","from":{"krate":2,"index":2470},"to":{"krate":0,"index":158}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":4352,"byte_end":4356,"line_start":124,"line_end":124,"column_start":63,"column_end":67},"kind":"SuperTrait","from":{"krate":2,"index":2859},"to":{"krate":0,"index":158}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":5934,"byte_end":5952,"line_start":167,"line_end":167,"column_start":16,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":181},"to":{"krate":1,"index":2321}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.6.0/src/lib.rs","byte_start":6573,"byte_end":6591,"line_start":181,"line_end":181,"column_start":23,"column_end":41},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":181},"to":{"krate":2,"index":8896}}]}