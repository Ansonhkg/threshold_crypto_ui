{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0","program":"/Users/chris/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","ff","--edition=2018","/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"derive\"","--cfg","feature=\"ff_derive\"","-C","metadata=b584f01449ac0c8e","-C","extra-filename=-b584f01449ac0c8e","--out-dir","/Users/chris/Documents/WorkStuff/LIT/threshold_crypto_ui/target/rls/debug/deps","-L","dependency=/Users/chris/Documents/WorkStuff/LIT/threshold_crypto_ui/target/rls/debug/deps","--extern","byteorder=/Users/chris/Documents/WorkStuff/LIT/threshold_crypto_ui/target/rls/debug/deps/libbyteorder-a2b5c8aaff4643c9.rmeta","--extern","ff_derive=/Users/chris/Documents/WorkStuff/LIT/threshold_crypto_ui/target/rls/debug/deps/libff_derive-6ce51fc9cdff3f39.dylib","--extern","rand_core=/Users/chris/Documents/WorkStuff/LIT/threshold_crypto_ui/target/rls/debug/deps/librand_core-823bd42b95ba9072.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/chris/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/chris/Documents/WorkStuff/LIT/threshold_crypto_ui/target/rls/debug/deps/libff-b584f01449ac0c8e.rmeta"},"prelude":{"crate_id":{"name":"ff","disambiguator":[14559123502665852499,5735942829971807754]},"crate_root":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src","external_crates":[{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7439535968655576646,17420488833649705410]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[1949116827220114676,2065912148165510692]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6424123809251651324,10791243255933316672]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11089070161906179638,2253832597208660558]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3666879193032761931,4629784602926728112]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17557414160303111626,7572947572632644954]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[915848953387719454,11341216537588130533]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4285064400235759547,17176111531075018758]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6997063163517280748,14486342634155193831]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2053070849310045891,9457326657766539472]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16492367081693084488,12081229032515817188]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[14000704685499991975,15439018228330051001]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[16882152814081891816,2081400005890767566]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[17412809486977561704,10774188040798205111]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[10299009701328497764,8719717191227013711]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[13564088873543153286,4566579444635585591]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","num":17,"id":{"name":"ff_derive","disambiguator":[12274094940056241117,611450952486628766]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","num":18,"id":{"name":"rand_core","disambiguator":[6724013384466506978,1646501529826493252]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","num":19,"id":{"name":"getrandom","disambiguator":[17485527053858168987,15449552219955800015]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","num":20,"id":{"name":"cfg_if","disambiguator":[8420289586558118857,13192060884594697870]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","num":21,"id":{"name":"libc","disambiguator":[2060832121312538863,2049104130529466806]}},{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","num":22,"id":{"name":"byteorder","disambiguator":[5173799694009680521,8157391968624637770]}}],"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":0,"byte_end":11324,"line_start":1,"line_end":393,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":235,"byte_end":236,"line_start":8,"line_end":8,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":10270,"byte_end":10271,"line_start":358,"line_end":358,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":0,"byte_end":11324,"line_start":1,"line_end":393,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":118},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":137},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":104},{"krate":0,"index":139},{"krate":0,"index":143},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":113},{"krate":0,"index":114}],"decl_id":null,"docs":" This crate provides traits for working with finite fields.\n","sig":null,"attributes":[{"value":"/ This crate provides traits for working with finite fields.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":0,"byte_end":62,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":118,"byte_end":161,"line_start":4,"line_end":4,"column_start":1,"column_end":44}},{"value":"allow(unused_imports)","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":162,"byte_end":187,"line_start":5,"line_end":5,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":23},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":394,"byte_end":399,"line_start":16,"line_end":16,"column_start":11,"column_end":16},"name":"Field","qualname":"::Field","value":"Field: Sized + Eq + Copy + Clone + Send + Sync + fmt::Debug + fmt::Display + 'static","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37}],"decl_id":null,"docs":" This trait represents an element of a field.\n","sig":null,"attributes":[{"value":"/ This trait represents an element of a field.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":335,"byte_end":383,"line_start":15,"line_end":15,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":573,"byte_end":579,"line_start":20,"line_end":20,"column_start":8,"column_end":14},"name":"random","qualname":"::Field::random","value":"pub fn random<R: RngCore + ?std::marker::Sized>(&mut R) -> Self","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Returns an element chosen uniformly at random using a user-provided RNG.\n","sig":null,"attributes":[{"value":"/ Returns an element chosen uniformly at random using a user-provided RNG.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":489,"byte_end":565,"line_start":19,"line_end":19,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":714,"byte_end":718,"line_start":23,"line_end":23,"column_start":8,"column_end":12},"name":"zero","qualname":"::Field::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Returns the zero element of the field, the additive identity.\n","sig":null,"attributes":[{"value":"/ Returns the zero element of the field, the additive identity.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":641,"byte_end":706,"line_start":22,"line_end":22,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":813,"byte_end":816,"line_start":26,"line_end":26,"column_start":8,"column_end":11},"name":"one","qualname":"::Field::one","value":"pub fn one() -> Self","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Returns the one element of the field, the multiplicative identity.\n","sig":null,"attributes":[{"value":"/ Returns the one element of the field, the multiplicative identity.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":735,"byte_end":805,"line_start":25,"line_end":25,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":883,"byte_end":890,"line_start":29,"line_end":29,"column_start":8,"column_end":15},"name":"is_zero","qualname":"::Field::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Returns true iff this element is zero.\n","sig":null,"attributes":[{"value":"/ Returns true iff this element is zero.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":833,"byte_end":875,"line_start":28,"line_end":28,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":945,"byte_end":951,"line_start":32,"line_end":32,"column_start":8,"column_end":14},"name":"square","qualname":"::Field::square","value":"pub fn square(&mut Self)","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Squares this element.\n","sig":null,"attributes":[{"value":"/ Squares this element.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":912,"byte_end":937,"line_start":31,"line_end":31,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":1002,"byte_end":1008,"line_start":35,"line_end":35,"column_start":8,"column_end":14},"name":"double","qualname":"::Field::double","value":"pub fn double(&mut Self)","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Doubles this element.\n","sig":null,"attributes":[{"value":"/ Doubles this element.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":969,"byte_end":994,"line_start":34,"line_end":34,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":1059,"byte_end":1065,"line_start":38,"line_end":38,"column_start":8,"column_end":14},"name":"negate","qualname":"::Field::negate","value":"pub fn negate(&mut Self)","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Negates this element.\n","sig":null,"attributes":[{"value":"/ Negates this element.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":1026,"byte_end":1051,"line_start":37,"line_end":37,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":1132,"byte_end":1142,"line_start":41,"line_end":41,"column_start":8,"column_end":18},"name":"add_assign","qualname":"::Field::add_assign","value":"pub fn add_assign(&mut Self, &Self)","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Adds another element to this element.\n","sig":null,"attributes":[{"value":"/ Adds another element to this element.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":1083,"byte_end":1124,"line_start":40,"line_end":40,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":1230,"byte_end":1240,"line_start":44,"line_end":44,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"::Field::sub_assign","value":"pub fn sub_assign(&mut Self, &Self)","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Subtracts another element from this element.\n","sig":null,"attributes":[{"value":"/ Subtracts another element from this element.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":1174,"byte_end":1222,"line_start":43,"line_end":43,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":1327,"byte_end":1337,"line_start":47,"line_end":47,"column_start":8,"column_end":18},"name":"mul_assign","qualname":"::Field::mul_assign","value":"pub fn mul_assign(&mut Self, &Self)","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Multiplies another element by this element.\n","sig":null,"attributes":[{"value":"/ Multiplies another element by this element.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":1272,"byte_end":1319,"line_start":46,"line_end":46,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":1445,"byte_end":1452,"line_start":50,"line_end":50,"column_start":8,"column_end":15},"name":"inverse","qualname":"::Field::inverse","value":"pub fn inverse(&Self) -> Option<Self>","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Computes the multiplicative inverse of this element, if nonzero.\n","sig":null,"attributes":[{"value":"/ Computes the multiplicative inverse of this element, if nonzero.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":1369,"byte_end":1437,"line_start":49,"line_end":49,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":1597,"byte_end":1610,"line_start":54,"line_end":54,"column_start":8,"column_end":21},"name":"frobenius_map","qualname":"::Field::frobenius_map","value":"pub fn frobenius_map(&mut Self, usize)","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Exponentiates this element by a power of the base prime modulus via\n the Frobenius automorphism.\n","sig":null,"attributes":[{"value":"/ Exponentiates this element by a power of the base prime modulus via","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":1482,"byte_end":1553,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ the Frobenius automorphism.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":1558,"byte_end":1589,"line_start":53,"line_end":53,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":1761,"byte_end":1764,"line_start":58,"line_end":58,"column_start":8,"column_end":11},"name":"pow","qualname":"::Field::pow","value":"pub fn pow<S: AsRef<[u64]>>(&Self, S) -> Self","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Exponentiates this element by a number represented with `u64` limbs,\n least significant digit first.\n","sig":null,"attributes":[{"value":"/ Exponentiates this element by a number represented with `u64` limbs,","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":1642,"byte_end":1714,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ least significant digit first.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":1719,"byte_end":1753,"line_start":57,"line_end":57,"column_start":5,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":39},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":2256,"byte_end":2265,"line_start":80,"line_end":80,"column_start":11,"column_end":20},"name":"SqrtField","qualname":"::SqrtField","value":"SqrtField: Field","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41}],"decl_id":null,"docs":" This trait represents an element of a field that has a square root operation described for it.\n","sig":null,"attributes":[{"value":"/ This trait represents an element of a field that has a square root operation described for it.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":2147,"byte_end":2245,"line_start":79,"line_end":79,"column_start":1,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":2340,"byte_end":2348,"line_start":82,"line_end":82,"column_start":8,"column_end":16},"name":"legendre","qualname":"::SqrtField::legendre","value":"pub fn legendre(&Self) -> LegendreSymbol","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Returns the Legendre symbol of the field element.\n","sig":null,"attributes":[{"value":"/ Returns the Legendre symbol of the field element.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":2279,"byte_end":2332,"line_start":81,"line_end":81,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":2473,"byte_end":2477,"line_start":86,"line_end":86,"column_start":8,"column_end":12},"name":"sqrt","qualname":"::SqrtField::sqrt","value":"pub fn sqrt(&Self) -> Option<Self>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Returns the square root of the field element, if it is\n quadratic residue.\n","sig":null,"attributes":[{"value":"/ Returns the square root of the field element, if it is","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":2380,"byte_end":2438,"line_start":84,"line_end":84,"column_start":5,"column_end":63}},{"value":"/ quadratic residue.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":2443,"byte_end":2465,"line_start":85,"line_end":85,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":42},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":2724,"byte_end":2738,"line_start":92,"line_end":92,"column_start":11,"column_end":25},"name":"PrimeFieldRepr","qualname":"::PrimeFieldRepr","value":"PrimeFieldRepr: Sized + Copy + Clone + Eq + Ord + Send + Sync + Default + fmt::Debug +\nfmt::Display + 'static + AsRef<[u64]> + AsMut<[u64]> + From<u64>","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":62},{"krate":0,"index":71},{"krate":0,"index":80}],"decl_id":null,"docs":" This trait represents a wrapper around a biginteger which can encode any element of a particular\n prime field. It is a smart wrapper around a sequence of `u64` limbs, least-significant digit\n first.\n","sig":null,"attributes":[{"value":"/ This trait represents a wrapper around a biginteger which can encode any element of a particular","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":2505,"byte_end":2605,"line_start":89,"line_end":89,"column_start":1,"column_end":101}},{"value":"/ prime field. It is a smart wrapper around a sequence of `u64` limbs, least-significant digit","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":2606,"byte_end":2702,"line_start":90,"line_end":90,"column_start":1,"column_end":97}},{"value":"/ first.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":2703,"byte_end":2713,"line_start":91,"line_end":91,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":2995,"byte_end":3007,"line_start":109,"line_end":109,"column_start":8,"column_end":20},"name":"sub_noborrow","qualname":"::PrimeFieldRepr::sub_noborrow","value":"pub fn sub_noborrow(&mut Self, &Self)","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Subtract another represetation from this one.\n","sig":null,"attributes":[{"value":"/ Subtract another represetation from this one.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":2938,"byte_end":2987,"line_start":108,"line_end":108,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":3090,"byte_end":3101,"line_start":112,"line_end":112,"column_start":8,"column_end":19},"name":"add_nocarry","qualname":"::PrimeFieldRepr::add_nocarry","value":"pub fn add_nocarry(&mut Self, &Self)","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Add another representation to this one.\n","sig":null,"attributes":[{"value":"/ Add another representation to this one.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":3039,"byte_end":3082,"line_start":111,"line_end":111,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":3234,"byte_end":3242,"line_start":116,"line_end":116,"column_start":8,"column_end":16},"name":"num_bits","qualname":"::PrimeFieldRepr::num_bits","value":"pub fn num_bits(&Self) -> u32","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Compute the number of bits needed to encode this number. Always a\n multiple of 64.\n","sig":null,"attributes":[{"value":"/ Compute the number of bits needed to encode this number. Always a","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":3133,"byte_end":3202,"line_start":114,"line_end":114,"column_start":5,"column_end":74}},{"value":"/ multiple of 64.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":3207,"byte_end":3226,"line_start":115,"line_end":115,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":3312,"byte_end":3319,"line_start":119,"line_end":119,"column_start":8,"column_end":15},"name":"is_zero","qualname":"::PrimeFieldRepr::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Returns true iff this number is zero.\n","sig":null,"attributes":[{"value":"/ Returns true iff this number is zero.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":3263,"byte_end":3304,"line_start":118,"line_end":118,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":3389,"byte_end":3395,"line_start":122,"line_end":122,"column_start":8,"column_end":14},"name":"is_odd","qualname":"::PrimeFieldRepr::is_odd","value":"pub fn is_odd(&Self) -> bool","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Returns true iff this number is odd.\n","sig":null,"attributes":[{"value":"/ Returns true iff this number is odd.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":3341,"byte_end":3381,"line_start":121,"line_end":121,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":3466,"byte_end":3473,"line_start":125,"line_end":125,"column_start":8,"column_end":15},"name":"is_even","qualname":"::PrimeFieldRepr::is_even","value":"pub fn is_even(&Self) -> bool","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Returns true iff this number is even.\n","sig":null,"attributes":[{"value":"/ Returns true iff this number is even.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":3417,"byte_end":3458,"line_start":124,"line_end":124,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":3590,"byte_end":3594,"line_start":129,"line_end":129,"column_start":8,"column_end":12},"name":"div2","qualname":"::PrimeFieldRepr::div2","value":"pub fn div2(&mut Self)","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Performs a rightwise bitshift of this number, effectively dividing\n it by 2.\n","sig":null,"attributes":[{"value":"/ Performs a rightwise bitshift of this number, effectively dividing","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":3495,"byte_end":3565,"line_start":127,"line_end":127,"column_start":5,"column_end":75}},{"value":"/ it by 2.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":3570,"byte_end":3582,"line_start":128,"line_end":128,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":3684,"byte_end":3687,"line_start":132,"line_end":132,"column_start":8,"column_end":11},"name":"shr","qualname":"::PrimeFieldRepr::shr","value":"pub fn shr(&mut Self, u32)","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Performs a rightwise bitshift of this number by some amount.\n","sig":null,"attributes":[{"value":"/ Performs a rightwise bitshift of this number by some amount.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":3612,"byte_end":3676,"line_start":131,"line_end":131,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":3833,"byte_end":3837,"line_start":136,"line_end":136,"column_start":8,"column_end":12},"name":"mul2","qualname":"::PrimeFieldRepr::mul2","value":"pub fn mul2(&mut Self)","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Performs a leftwise bitshift of this number, effectively multiplying\n it by 2. Overflow is ignored.\n","sig":null,"attributes":[{"value":"/ Performs a leftwise bitshift of this number, effectively multiplying","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":3715,"byte_end":3787,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"/ it by 2. Overflow is ignored.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":3792,"byte_end":3825,"line_start":135,"line_end":135,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":3926,"byte_end":3929,"line_start":139,"line_end":139,"column_start":8,"column_end":11},"name":"shl","qualname":"::PrimeFieldRepr::shl","value":"pub fn shl(&mut Self, u32)","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Performs a leftwise bitshift of this number by some amount.\n","sig":null,"attributes":[{"value":"/ Performs a leftwise bitshift of this number by some amount.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":3855,"byte_end":3918,"line_start":138,"line_end":138,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":4022,"byte_end":4030,"line_start":142,"line_end":142,"column_start":8,"column_end":16},"name":"write_be","qualname":"::PrimeFieldRepr::write_be","value":"pub fn write_be<W: Write>(&Self, W) -> io::Result<()>","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Writes this `PrimeFieldRepr` as a big endian integer.\n","sig":null,"attributes":[{"value":"/ Writes this `PrimeFieldRepr` as a big endian integer.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":3957,"byte_end":4014,"line_start":141,"line_end":141,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":4338,"byte_end":4345,"line_start":153,"line_end":153,"column_start":8,"column_end":15},"name":"read_be","qualname":"::PrimeFieldRepr::read_be","value":"pub fn read_be<R: Read>(&mut Self, R) -> io::Result<()>","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Reads a big endian integer into this representation.\n","sig":null,"attributes":[{"value":"/ Reads a big endian integer into this representation.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":4274,"byte_end":4330,"line_start":152,"line_end":152,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":4665,"byte_end":4673,"line_start":164,"line_end":164,"column_start":8,"column_end":16},"name":"write_le","qualname":"::PrimeFieldRepr::write_le","value":"pub fn write_le<W: Write>(&Self, W) -> io::Result<()>","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Writes this `PrimeFieldRepr` as a little endian integer.\n","sig":null,"attributes":[{"value":"/ Writes this `PrimeFieldRepr` as a little endian integer.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":4597,"byte_end":4657,"line_start":163,"line_end":163,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":4984,"byte_end":4991,"line_start":175,"line_end":175,"column_start":8,"column_end":15},"name":"read_le","qualname":"::PrimeFieldRepr::read_le","value":"pub fn read_le<R: Read>(&mut Self, R) -> io::Result<()>","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Reads a little endian integer into this representation.\n","sig":null,"attributes":[{"value":"/ Reads a little endian integer into this representation.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":4917,"byte_end":4976,"line_start":174,"line_end":174,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":119},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":5299,"byte_end":5303,"line_start":188,"line_end":188,"column_start":5,"column_end":9},"name":"Zero","qualname":"::LegendreSymbol::Zero","value":"LegendreSymbol::Zero","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":122},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":5313,"byte_end":5329,"line_start":189,"line_end":189,"column_start":5,"column_end":21},"name":"QuadraticResidue","qualname":"::LegendreSymbol::QuadraticResidue","value":"LegendreSymbol::QuadraticResidue","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":125},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":5339,"byte_end":5358,"line_start":190,"line_end":190,"column_start":5,"column_end":24},"name":"QuadraticNonResidue","qualname":"::LegendreSymbol::QuadraticNonResidue","value":"LegendreSymbol::QuadraticNonResidue","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":118},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":5278,"byte_end":5292,"line_start":187,"line_end":187,"column_start":10,"column_end":24},"name":"LegendreSymbol","qualname":"::LegendreSymbol","value":"pub enum LegendreSymbol {\n    Zero = ,\n    QuadraticResidue = ,\n    QuadraticNonResidue = ,\n}","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":125}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":134},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":5573,"byte_end":5583,"line_start":198,"line_end":198,"column_start":5,"column_end":15},"name":"NotInField","qualname":"::PrimeFieldDecodingError::NotInField","value":"PrimeFieldDecodingError::NotInField(String)","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":" The encoded value is not in the field\n","sig":null,"attributes":[{"value":"/ The encoded value is not in the field","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":5527,"byte_end":5568,"line_start":197,"line_end":197,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":133},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":5497,"byte_end":5520,"line_start":196,"line_end":196,"column_start":10,"column_end":33},"name":"PrimeFieldDecodingError","qualname":"::PrimeFieldDecodingError","value":"pub enum PrimeFieldDecodingError { NotInField(String), }","parent":null,"children":[{"krate":0,"index":134}],"decl_id":null,"docs":" An error that may occur when trying to interpret a `PrimeFieldRepr` as a\n `PrimeField` element.\n","sig":null,"attributes":[{"value":"/ An error that may occur when trying to interpret a `PrimeFieldRepr` as a","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":5368,"byte_end":5444,"line_start":193,"line_end":193,"column_start":1,"column_end":77}},{"value":"/ `PrimeField` element.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":5445,"byte_end":5470,"line_start":194,"line_end":194,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":93},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":6168,"byte_end":6178,"line_start":220,"line_end":220,"column_start":11,"column_end":21},"name":"PrimeField","qualname":"::PrimeField","value":"PrimeField: Field","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103}],"decl_id":null,"docs":" This represents an element of a prime field.\n","sig":null,"attributes":[{"value":"/ This represents an element of a prime field.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":6109,"byte_end":6157,"line_start":219,"line_end":219,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":94},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":6298,"byte_end":6302,"line_start":223,"line_end":223,"column_start":10,"column_end":14},"name":"Repr","qualname":"::PrimeField::Repr","value":"type Repr: PrimeFieldRepr + From<Self>;","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" The prime field can be converted back and forth into this biginteger\n representation.\n","sig":null,"attributes":[{"value":"/ The prime field can be converted back and forth into this biginteger","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":6192,"byte_end":6264,"line_start":221,"line_end":221,"column_start":5,"column_end":77}},{"value":"/ representation.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":6269,"byte_end":6288,"line_start":222,"line_end":222,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":6487,"byte_end":6495,"line_start":227,"line_end":227,"column_start":8,"column_end":16},"name":"from_str","qualname":"::PrimeField::from_str","value":"pub fn from_str(&str) -> Option<Self>","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Interpret a string of numbers as a (congruent) prime field element.\n Does not accept unnecessary leading zeroes or a blank string.\n","sig":null,"attributes":[{"value":"/ Interpret a string of numbers as a (congruent) prime field element.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":6338,"byte_end":6409,"line_start":225,"line_end":225,"column_start":5,"column_end":76}},{"value":"/ Does not accept unnecessary leading zeroes or a blank string.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":6414,"byte_end":6479,"line_start":226,"line_end":226,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":7464,"byte_end":7473,"line_start":266,"line_end":266,"column_start":8,"column_end":17},"name":"from_repr","qualname":"::PrimeField::from_repr","value":"pub fn from_repr(Self::Repr) -> Result<Self, PrimeFieldDecodingError>","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Convert this prime field element into a biginteger representation.\n","sig":null,"attributes":[{"value":"/ Convert this prime field element into a biginteger representation.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":7386,"byte_end":7456,"line_start":265,"line_end":265,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":7661,"byte_end":7670,"line_start":270,"line_end":270,"column_start":8,"column_end":17},"name":"into_repr","qualname":"::PrimeField::into_repr","value":"pub fn into_repr(&Self) -> Self::Repr","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Convert a biginteger representation into a prime field element, if\n the number is an element of the field.\n","sig":null,"attributes":[{"value":"/ Convert a biginteger representation into a prime field element, if","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":7536,"byte_end":7606,"line_start":268,"line_end":268,"column_start":5,"column_end":75}},{"value":"/ the number is an element of the field.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":7611,"byte_end":7653,"line_start":269,"line_end":269,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":7756,"byte_end":7760,"line_start":273,"line_end":273,"column_start":8,"column_end":12},"name":"char","qualname":"::PrimeField::char","value":"pub fn char() -> Self::Repr","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Returns the field characteristic; the modulus.\n","sig":null,"attributes":[{"value":"/ Returns the field characteristic; the modulus.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":7698,"byte_end":7748,"line_start":272,"line_end":272,"column_start":5,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":99},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":7861,"byte_end":7869,"line_start":276,"line_end":276,"column_start":11,"column_end":19},"name":"NUM_BITS","qualname":"::PrimeField::NUM_BITS","value":"u32","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" How many bits are needed to represent an element of this field.\n","sig":null,"attributes":[{"value":"/ How many bits are needed to represent an element of this field.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":7783,"byte_end":7850,"line_start":275,"line_end":275,"column_start":5,"column_end":72}}]},{"kind":"Const","id":{"krate":0,"index":100},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":7969,"byte_end":7977,"line_start":279,"line_end":279,"column_start":11,"column_end":19},"name":"CAPACITY","qualname":"::PrimeField::CAPACITY","value":"u32","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" How many bits of information can be reliably stored in the field element.\n","sig":null,"attributes":[{"value":"/ How many bits of information can be reliably stored in the field element.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":7881,"byte_end":7958,"line_start":278,"line_end":278,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":8116,"byte_end":8140,"line_start":283,"line_end":283,"column_start":8,"column_end":32},"name":"multiplicative_generator","qualname":"::PrimeField::multiplicative_generator","value":"pub fn multiplicative_generator() -> Self","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Returns the multiplicative generator of `char()` - 1 order. This element\n must also be quadratic nonresidue.\n","sig":null,"attributes":[{"value":"/ Returns the multiplicative generator of `char()` - 1 order. This element","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":7989,"byte_end":8065,"line_start":281,"line_end":281,"column_start":5,"column_end":81}},{"value":"/ must also be quadratic nonresidue.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":8070,"byte_end":8108,"line_start":282,"line_end":282,"column_start":5,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":102},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":8206,"byte_end":8207,"line_start":286,"line_end":286,"column_start":11,"column_end":12},"name":"S","qualname":"::PrimeField::S","value":"u32","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" 2^s * t = `char()` - 1 with t odd.\n","sig":null,"attributes":[{"value":"/ 2^s * t = `char()` - 1 with t odd.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":8157,"byte_end":8195,"line_start":285,"line_end":285,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":8334,"byte_end":8347,"line_start":290,"line_end":290,"column_start":8,"column_end":21},"name":"root_of_unity","qualname":"::PrimeField::root_of_unity","value":"pub fn root_of_unity() -> Self","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Returns the 2^s root of unity computed by exponentiating the `multiplicative_generator()`\n by t.\n","sig":null,"attributes":[{"value":"/ Returns the 2^s root of unity computed by exponentiating the `multiplicative_generator()`","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":8219,"byte_end":8312,"line_start":288,"line_end":288,"column_start":5,"column_end":98}},{"value":"/ by t.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":8317,"byte_end":8326,"line_start":289,"line_end":289,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":104},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":8585,"byte_end":8597,"line_start":296,"line_end":296,"column_start":11,"column_end":23},"name":"ScalarEngine","qualname":"::ScalarEngine","value":"ScalarEngine: Sized + 'static + Clone","parent":null,"children":[{"krate":0,"index":105}],"decl_id":null,"docs":" An \"engine\" is a collection of types (fields, elliptic curve groups, etc.)\n with well-defined relationships. Specific relationships (for example, a\n pairing-friendly curve) can be defined in a subtrait.\n","sig":null,"attributes":[{"value":"/ An \"engine\" is a collection of types (fields, elliptic curve groups, etc.)","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":8362,"byte_end":8440,"line_start":293,"line_end":293,"column_start":1,"column_end":79}},{"value":"/ with well-defined relationships. Specific relationships (for example, a","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":8441,"byte_end":8516,"line_start":294,"line_end":294,"column_start":1,"column_end":76}},{"value":"/ pairing-friendly curve) can be defined in a subtrait.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":8517,"byte_end":8574,"line_start":295,"line_end":295,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":105},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":8691,"byte_end":8693,"line_start":298,"line_end":298,"column_start":10,"column_end":12},"name":"Fr","qualname":"::ScalarEngine::Fr","value":"type Fr: PrimeField + SqrtField;","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" This is the scalar field of the engine's groups.\n","sig":null,"attributes":[{"value":"/ This is the scalar field of the engine's groups.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":8629,"byte_end":8681,"line_start":297,"line_end":297,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":139},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":8750,"byte_end":8761,"line_start":302,"line_end":302,"column_start":12,"column_end":23},"name":"BitIterator","qualname":"::BitIterator","value":"BitIterator {  }","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":8844,"byte_end":8847,"line_start":308,"line_end":308,"column_start":12,"column_end":15},"name":"new","qualname":"<BitIterator<E>>::new","value":"pub fn new(E) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":115},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":10419,"byte_end":10422,"line_start":364,"line_end":364,"column_start":12,"column_end":15},"name":"sbb","qualname":"::arith_impl::sbb","value":"pub fn sbb(u64, u64, &mut u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Calculate a - b - borrow, returning the result and modifying\n the borrow value.\n","sig":null,"attributes":[{"value":"/ Calculate a - b - borrow, returning the result and modifying","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":10295,"byte_end":10359,"line_start":361,"line_end":361,"column_start":5,"column_end":69}},{"value":"/ the borrow value.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":10364,"byte_end":10385,"line_start":362,"line_end":362,"column_start":5,"column_end":26}},{"value":"inline(always)","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":10390,"byte_end":10407,"line_start":363,"line_end":363,"column_start":5,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":116},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":10758,"byte_end":10761,"line_start":375,"line_end":375,"column_start":12,"column_end":15},"name":"adc","qualname":"::arith_impl::adc","value":"pub fn adc(u64, u64, &mut u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Calculate a + b + carry, returning the sum and modifying the\n carry value.\n","sig":null,"attributes":[{"value":"/ Calculate a + b + carry, returning the sum and modifying the","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":10639,"byte_end":10703,"line_start":372,"line_end":372,"column_start":5,"column_end":69}},{"value":"/ carry value.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":10708,"byte_end":10724,"line_start":373,"line_end":373,"column_start":5,"column_end":21}},{"value":"inline(always)","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":10729,"byte_end":10746,"line_start":374,"line_end":374,"column_start":5,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":117},"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":11106,"byte_end":11120,"line_start":386,"line_end":386,"column_start":12,"column_end":26},"name":"mac_with_carry","qualname":"::arith_impl::mac_with_carry","value":"pub fn mac_with_carry(u64, u64, u64, &mut u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Calculate a + (b * c) + carry, returning the least significant digit\n and setting carry to the most significant digit.\n","sig":null,"attributes":[{"value":"/ Calculate a + (b * c) + carry, returning the least significant digit","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":10943,"byte_end":11015,"line_start":383,"line_end":383,"column_start":5,"column_end":77}},{"value":"/ and setting carry to the most significant digit.","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":11020,"byte_end":11072,"line_start":384,"line_end":384,"column_start":5,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":11077,"byte_end":11094,"line_start":385,"line_end":385,"column_start":5,"column_end":22}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":5611,"byte_end":5634,"line_start":201,"line_end":201,"column_start":16,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":5822,"byte_end":5845,"line_start":209,"line_end":209,"column_start":23,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":8816,"byte_end":8827,"line_start":307,"line_end":307,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":8977,"byte_end":8988,"line_start":315,"line_end":315,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":405,"byte_end":410,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":23}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":413,"byte_end":415,"line_start":17,"line_end":17,"column_start":13,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":2509},"to":{"krate":0,"index":23}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":418,"byte_end":422,"line_start":17,"line_end":17,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":2863},"to":{"krate":0,"index":23}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":425,"byte_end":430,"line_start":17,"line_end":17,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2474},"to":{"krate":0,"index":23}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":433,"byte_end":437,"line_start":17,"line_end":17,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2853},"to":{"krate":0,"index":23}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":440,"byte_end":444,"line_start":17,"line_end":17,"column_start":40,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":2865},"to":{"krate":0,"index":23}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":452,"byte_end":457,"line_start":17,"line_end":17,"column_start":52,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":8887},"to":{"krate":0,"index":23}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":465,"byte_end":472,"line_start":17,"line_end":17,"column_start":65,"column_end":72},"kind":"SuperTrait","from":{"krate":2,"index":8894},"to":{"krate":0,"index":23}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":2267,"byte_end":2272,"line_start":80,"line_end":80,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":23},"to":{"krate":0,"index":39}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":2744,"byte_end":2749,"line_start":93,"line_end":93,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":42}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":2756,"byte_end":2760,"line_start":94,"line_end":94,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2863},"to":{"krate":0,"index":42}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":2767,"byte_end":2772,"line_start":95,"line_end":95,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":2474},"to":{"krate":0,"index":42}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":2779,"byte_end":2781,"line_start":96,"line_end":96,"column_start":7,"column_end":9},"kind":"SuperTrait","from":{"krate":2,"index":2509},"to":{"krate":0,"index":42}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":2788,"byte_end":2791,"line_start":97,"line_end":97,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2540},"to":{"krate":0,"index":42}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":2798,"byte_end":2802,"line_start":98,"line_end":98,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2853},"to":{"krate":0,"index":42}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":2809,"byte_end":2813,"line_start":99,"line_end":99,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2865},"to":{"krate":0,"index":42}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":2820,"byte_end":2827,"line_start":100,"line_end":100,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":2,"index":2831},"to":{"krate":0,"index":42}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":2839,"byte_end":2844,"line_start":101,"line_end":101,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":2,"index":8887},"to":{"krate":0,"index":42}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":2856,"byte_end":2863,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":8894},"to":{"krate":0,"index":42}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":2884,"byte_end":2889,"line_start":104,"line_end":104,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":2750},"to":{"krate":0,"index":42}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":2903,"byte_end":2908,"line_start":105,"line_end":105,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":2753},"to":{"krate":0,"index":42}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":2922,"byte_end":2926,"line_start":106,"line_end":106,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2759},"to":{"krate":0,"index":42}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":5611,"byte_end":5634,"line_start":201,"line_end":201,"column_start":16,"column_end":39},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":133},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":5822,"byte_end":5845,"line_start":209,"line_end":209,"column_start":23,"column_end":46},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":133},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":6180,"byte_end":6185,"line_start":220,"line_end":220,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":23},"to":{"krate":0,"index":93}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":8599,"byte_end":8604,"line_start":296,"line_end":296,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":104}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":8617,"byte_end":8622,"line_start":296,"line_end":296,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":2474},"to":{"krate":0,"index":104}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":8816,"byte_end":8827,"line_start":307,"line_end":307,"column_start":23,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.6.0/src/lib.rs","byte_start":8977,"byte_end":8988,"line_start":315,"line_end":315,"column_start":36,"column_end":47},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":139},"to":{"krate":2,"index":7310}}]}